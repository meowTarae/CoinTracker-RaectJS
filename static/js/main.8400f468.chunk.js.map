{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","isDark","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","x","map","p","time_open","y","open","high","low","close","options","theme","mode","chart","height","width","background","xaxis","yaxis","tooltip","enabled","labels","formatter","value","toFixed","Price","fetchCoinYearHis","console","log","name","toolbar","show","grid","stroke","curve","tickAmount","axisBorder","axisTicks","categories","price","time_close","title","text","style","fontSize","fill","gradient","gradientToColors","stops","colors","Container","styled","div","Header","Title","h1","accentColor","Loading","span","Overview","bgColor","OverviewItem","Description","Tabs","Tab","isActive","textColor","Icon","IconToggle","IconHome","IconToggleOn","Coin","toggleTheme","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","onClick","icon","faToggleOff","faToggleOn","to","faHome","rank","symbol","quotes","USD","description","slice","total_supply","max_supply","path","CoinList","Img","img","Coins","coin","pathname","id","src","toLowerCase","Router","basename","process","darkTheme","lightTheme","GlobalStyle","createGlobalStyle","App","useState","setIsDark","current","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.8400f468.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\n// Chart.tsx ↓\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n\r\n// Price.tsx ↓\r\nexport function fetchCoinYearHis(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7;\r\n\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n  isDark: boolean;\r\n}\r\n\r\ninterface IData {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Chart({ coinId, isDark }: ChartProps) {\r\n  const { isLoading, data } = useQuery<IData[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  // IData 값들은 하루 분량치이며,\r\n  // 이게 2주치, 즉 14개나 가지고있으므로\r\n  // IData옆에 []를 넣어줘야한다.\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              data: [\r\n                {\r\n                  x: [data?.map((p) => p.time_open)],\r\n                  y: [\r\n                    data?.map((p) => p.open),\r\n                    data?.map((p) => p.high),\r\n                    data?.map((p) => p.low),\r\n                    data?.map((p) => p.close),\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? \"dark\" : \"light\",\r\n            },\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n\r\n              background: \"transparent\",\r\n            },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n              labels: {\r\n                formatter: (value) => `${value.toFixed(0)}`,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Chart;\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinYearHis } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface priceProps {\r\n  coinId: string;\r\n  isDark: boolean;\r\n}\r\n\r\ninterface IPriceData {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Price({ coinId, isDark }: priceProps) {\r\n  const { isLoading, data } = useQuery<IPriceData[]>(\r\n    [\"price/weekend\", coinId],\r\n    () => fetchCoinYearHis(coinId)\r\n  );\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((p) => p.close - p.open),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? \"dark\" : \"light\",\r\n            },\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: false },\r\n            stroke: {\r\n              curve: \"smooth\",\r\n              width: 4,\r\n            },\r\n\r\n            yaxis: {\r\n              tickAmount: 1,\r\n              labels: {\r\n                formatter: (value) => `${value.toFixed(0)}`,\r\n              },\r\n            },\r\n\r\n            xaxis: {\r\n              axisBorder: { show: false },\r\n              axisTicks: { show: false },\r\n              // labels: { show:   },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            title: {\r\n              text: \"Daily variance\",\r\n              style: { fontSize: \"20px\" },\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: { gradientToColors: [\"#0fbcf9\"], stops: [0, 90] },\r\n            },\r\n            colors: [\"#9c88ff\"],\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$${value.toFixed(2)}`,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Price;\r\n","import {\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  faHome,\r\n  faToggleOn,\r\n  faToggleOff,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// <Styled>\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n  margin: 0 auto;\r\n  max-width: 400px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 30px 0 40px 0;\r\n  font-weight: 900;\r\n\r\n  position: relative; // 아이콘 위치 잡아주는 용도\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  padding-top: 10px;\r\n  color: ${(p) => p.theme.accentColor};\r\n`;\r\n\r\nconst Loading = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n  margin-top: 10vh;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  /* background-color: ${(p) => p.theme.bgColor};\r\n  box-shadow: 0px 10px 20px -15px; */\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 26px 0 26px 8px;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 20px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  /* text-transform: uppercase; */\r\n  font-size: 15px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(p) => (p.isActive ? p.theme.accentColor : p.theme.textColor)};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  position: absolute;\r\n  width: 25px;\r\n  height: 25px;\r\n  font-size: 15px;\r\n  top: -20%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: color 0.1s linear;\r\n  padding: 6%;\r\n  &:hover {\r\n    color: ${(p) => p.theme.accentColor};\r\n  }\r\n\r\n  color: ${(p) => p.theme.textColor};\r\n`;\r\n\r\nconst IconToggle = styled(Icon)`\r\n  left: -3%;\r\n`;\r\n\r\nconst IconHome = styled(Icon)`\r\n  right: -3%;\r\n`;\r\n\r\nconst IconToggleOn = styled.div`\r\n  color: ${(p) => p.theme.accentColor};\r\n`;\r\n// </Styled>\r\n\r\n// <Props>\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\ninterface RouteState {\r\n  name: string;\r\n}\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\ninterface ICoinProps {\r\n  toggleTheme: () => void;\r\n  isDark: boolean;\r\n}\r\n// </Props>\r\n\r\nfunction Coin({ toggleTheme, isDark }: ICoinProps) {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n\r\n  const loading = infoLoading || tickersLoading;\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Load...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n          <IconToggle onClick={toggleTheme}>\r\n            {isDark ? (\r\n              <FontAwesomeIcon icon={faToggleOff} />\r\n            ) : (\r\n              <IconToggleOn>\r\n                <FontAwesomeIcon icon={faToggleOn} />\r\n              </IconToggleOn>\r\n            )}\r\n          </IconToggle>\r\n          <Link to={`/`}>\r\n            <IconHome>\r\n              <FontAwesomeIcon icon={faHome} />\r\n            </IconHome>\r\n          </Link>\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loading>Loading...</Loading>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>now Price:</span>\r\n              <span>$ {tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description.slice(0, 318)}...</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>{infoData?.name}'s chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>{infoData?.name}'s price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/${coinId}/price`}>\r\n              <Price isDark={isDark} coinId={coinId} />\r\n            </Route>\r\n            <Route path={`/${coinId}/chart`}>\r\n              <Chart isDark={isDark} coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { faToggleOn, faToggleOff } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// <styled>\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n  margin: 0 auto;\r\n  max-width: 400px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 30px 0 40px 0;\r\n  font-weight: 900;\r\n\r\n  position: relative;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  padding-top: 20px;\r\n  color: ${(p) => p.theme.accentColor};\r\n`;\r\n\r\nconst Loading = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n  margin-top: 10vh;\r\n`;\r\n\r\nconst CoinList = styled.div``;\r\n\r\nconst Coin = styled.div`\r\n  background-color: ${(p) => p.theme.textColor};\r\n  color: ${(p) => p.theme.bgColor};\r\n  padding: 1px;\r\n  margin-bottom: 10px;\r\n  border-radius: 15px;\r\n  a {\r\n    transition: color 0.1s linear;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 15px;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(p) => p.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 25px;\r\n  height: 25px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  position: absolute;\r\n  width: 25px;\r\n  height: 25px;\r\n  font-size: 15px;\r\n  top: -10%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: color 0.1s linear;\r\n  padding: 6%;\r\n  &:hover {\r\n    color: ${(p) => p.theme.accentColor};\r\n  }\r\n  left: 0%;\r\n  color: ${(p) => p.theme.textColor};\r\n`;\r\n\r\nconst IconToggleOn = styled.div`\r\n  color: ${(p) => p.theme.accentColor};\r\n`;\r\n// </styled>\r\n\r\n// <Props>\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\ninterface ICoinsProps {\r\n  toggleTheme: () => void;\r\n  isDark: boolean;\r\n}\r\n// </Props>\r\n\r\nfunction Coins({ toggleTheme, isDark }: ICoinsProps) {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>비뜨꼬인</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>비뜨꼬인</Title>\r\n        <Icon onClick={toggleTheme}>\r\n          {\" \"}\r\n          {isDark ? (\r\n            <FontAwesomeIcon icon={faToggleOff} />\r\n          ) : (\r\n            <IconToggleOn>\r\n              <FontAwesomeIcon icon={faToggleOn} />\r\n            </IconToggleOn>\r\n          )}\r\n        </Icon>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loading>Loading...</Loading>\r\n      ) : (\r\n        <CoinList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name}\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\ninterface IRouterProps {\r\n  toggleTheme: () => void;\r\n  isDark: boolean;\r\n}\r\n\r\nfunction Router({ toggleTheme, isDark }: IRouterProps) {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/:coinId\">\r\n          <Coin isDark={isDark} toggleTheme={toggleTheme} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Coins isDark={isDark} toggleTheme={toggleTheme} />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\n// export const theme: DefaultTheme = {\r\n//   bgColor: \"#2f3640\",\r\n//   textColor: \"#f5f6fa\",\r\n//   accentColor: \"#8c7ae6\",\r\n// };\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"#f5f6fa\",\r\n  accentColor: \"#8c7ae6\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"#f5f6fa\",\r\n  textColor: \"#2f3640\",\r\n  accentColor: \"#00a8ff\",\r\n};\r\n","import { useState } from \"react\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:ital,wght@0,300;0,400;1,900&display=swap');\n  html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n*{\n  box-sizing: border-box; \n}\nbody{\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(p) => p.theme.bgColor};\n  color: ${(p) => p.theme.textColor};\n}\na{\n  text-decoration: none;\n  color: inherit;\n}\n\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useState(true);\n  const toggleTheme = () => setIsDark((current) => !current);\n\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router isDark={isDark} toggleTheme={toggleTheme} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}